/* PolyChat AI - Styles hacker */

/* Variables CSS pour le thème hacker - Version sombre */
:root {
  /* Couleurs principales - Plus sombres et discrètes */
  --hacker-green: #4a9b4a;
  --hacker-dark-green: #2a4a2a;
  --hacker-darker-green: #1a2a1a;
  --hacker-light-green: #6a8a6a;
  --hacker-gray: #2a2a2a;
  --hacker-dark-gray: #1a1a1a;
  --hacker-darker-gray: #0f0f0f;
  
  /* Dégradés plus sombres */
  --gradient-primary: linear-gradient(135deg, var(--hacker-gray) 0%, var(--hacker-dark-gray) 100%);
  --gradient-secondary: linear-gradient(135deg, var(--hacker-dark-gray) 0%, var(--hacker-darker-gray) 100%);
  --gradient-accent: linear-gradient(135deg, var(--hacker-light-green) 0%, var(--hacker-dark-green) 100%);
  
  /* Ombres plus subtiles */
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.2);
  --shadow-md: 0 2px 4px -1px rgba(0, 0, 0, 0.3), 0 1px 2px -1px rgba(0, 0, 0, 0.2);
  --shadow-lg: 0 4px 8px -2px rgba(0, 0, 0, 0.4), 0 2px 4px -1px rgba(0, 0, 0, 0.3);
  --shadow-xl: 0 8px 16px -4px rgba(0, 0, 0, 0.5), 0 4px 8px -2px rgba(0, 0, 0, 0.4);
  
  /* Effets de néon très subtils */
  --neon-glow: 0 0 2px rgba(106, 138, 106, 0.3), 0 0 4px rgba(106, 138, 106, 0.2);
  --neon-glow-strong: 0 0 3px rgba(106, 138, 106, 0.4), 0 0 6px rgba(106, 138, 106, 0.3);
  
  /* Bordures discrètes */
  --border-thin: 1px solid var(--hacker-gray);
  --border-medium: 1px solid var(--hacker-light-green);
  --border-thick: 2px solid var(--hacker-light-green);
  
  /* Rayons de bordure */
  --border-radius-sm: 4px;
  --border-radius-md: 6px;
  --border-radius-lg: 8px;
  --border-radius-xl: 10px;
  
  /* Espacement */
  --spacing-xs: 4px;
  --spacing-sm: 8px;
  --spacing-md: 12px;
  --spacing-lg: 16px;
  --spacing-xl: 24px;
}

/* Animations */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideIn {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% { transform: translate3d(0,0,0); }
  40%, 43% { transform: translate3d(0, -10px, 0); }
  70% { transform: translate3d(0, -5px, 0); }
  90% { transform: translate3d(0, -2px, 0); }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Utilitaires généraux */
.fade-in {
  animation: fadeIn 0.3s ease-out;
}

.slide-in {
  animation: slideIn 0.3s ease-out;
}

.pulse {
  animation: pulse 2s infinite;
}

.bounce {
  animation: bounce 1s infinite;
}

.spin {
  animation: spin 1s linear infinite;
}

/* Effets de glassmorphism */
.glass {
  background: rgba(10, 30, 10, 0.3);
  backdrop-filter: blur(5px);
  border: var(--border-thin);
}

.glass-dark {
  background: rgba(5, 15, 5, 0.3);
  backdrop-filter: blur(5px);
  border: var(--border-thin);
}

/* Boutons modernes */
.btn-modern {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
  border: var(--border-thin);
  border-radius: var(--border-radius-md);
  cursor: pointer;
  font-weight: 500;
  outline: none;
  background: var(--hacker-dark-green);
  color: var(--hacker-green);
  box-shadow: var(--neon-glow);
}

.btn-modern:hover {
  background: var(--hacker-green);
  color: var(--hacker-darker-green);
  box-shadow: var(--neon-glow-strong);
}

.btn-modern:active {
  transform: translateY(0);
}

.btn-modern::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.btn-modern:hover::before {
  transform: translateX(100%);
}

/* Cartes modernes */
.card-modern {
  background: var(--hacker-darker-green);
  backdrop-filter: blur(5px);
  border: var(--border-thin);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--neon-glow);
  transition: all 0.3s ease;
}

.card-modern:hover {
  box-shadow: var(--neon-glow-strong);
}

/* Messages de chat */
.message-user {
  background: var(--hacker-dark-green);
  color: var(--hacker-green);
  border: var(--border-thin);
  border-radius: var(--border-radius-md);
  padding: var(--spacing-md);
  margin-left: auto;
  max-width: 80%;
  box-shadow: var(--neon-glow);
}

.message-assistant {
  background: var(--hacker-darker-green);
  color: var(--hacker-green);
  border: var(--border-thin);
  border-radius: var(--border-radius-md);
  padding: var(--spacing-md);
  margin-right: auto;
  max-width: 80%;
  box-shadow: var(--neon-glow);
}

/* Indicateur de frappe */
.typing-indicator {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
  padding: var(--spacing-md);
  background: var(--hacker-darker-green);
  border: var(--border-thin);
  border-radius: var(--border-radius-md);
  margin-right: auto;
  width: fit-content;
  box-shadow: var(--neon-glow);
}

.typing-dot {
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--hacker-green);
  animation: pulse 1.4s infinite ease-in-out;
}

.typing-dot:nth-child(1) { animation-delay: 0s; }
.typing-dot:nth-child(2) { animation-delay: 0.2s; }
.typing-dot:nth-child(3) { animation-delay: 0.4s; }

/* Champ de saisie moderne */
.input-modern {
  background: var(--hacker-darker-green);
  border: var(--border-thin);
  border-radius: var(--border-radius-md);
  padding: var(--spacing-md);
  color: var(--hacker-green);
  font-size: 14px;
  transition: all 0.3s ease;
  outline: none;
  resize: none;
  box-shadow: var(--neon-glow);
}

.input-modern::placeholder {
  color: rgba(0, 255, 65, 0.5);
}

.input-modern:focus {
  border: var(--border-medium);
  background: var(--hacker-dark-green);
  box-shadow: var(--neon-glow-strong);
}

/* Modal moderne */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 15, 0, 0.8);
  backdrop-filter: blur(3px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  animation: fadeIn 0.3s ease-out;
}

.modal-content {
  background: var(--hacker-darker-green);
  border: var(--border-thin);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-xl);
  box-shadow: var(--neon-glow-strong);
  max-width: 500px;
  width: 90%;
  max-height: 80vh;
  overflow-y: auto;
}

/* Scrollbar personnalisée */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.3);
  border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.5);
}

/* Responsive */
@media (max-width: 768px) {
  .message-user,
  .message-assistant {
    max-width: 95%;
  }
  
  .modal-content {
    margin: var(--spacing-md);
    width: calc(100% - 2 * var(--spacing-md));
  }
  
  :root {
    --spacing-lg: 16px;
    --spacing-xl: 24px;
  }
}

/* Effets de survol pour les éléments interactifs */
.interactive {
  transition: all 0.2s ease;
  cursor: pointer;
}

.interactive:hover {
  transform: scale(1.02);
}

.interactive:active {
  transform: scale(0.98);
}

/* Gradient de fond animé */
.animated-gradient {
  background: linear-gradient(-45deg, var(--hacker-dark-green), var(--hacker-darker-green), var(--hacker-green), var(--hacker-light-green));
  background-size: 400% 400%;
  animation: gradientShift 15s ease infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Curseur personnalisé de style hacker */
* {
  cursor: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%2300ff41' stroke-width='1' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M4 17l6-6-6-6'/%3E%3C/svg%3E"), auto;
}

/* Curseur personnalisé pour les liens */
a, button {
  cursor: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%2300ff41' stroke-width='1' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='9 18 15 12 9 6'/%3E%3C/svg%3E"), pointer;
}
